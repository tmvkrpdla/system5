package manager.co.kr.current.controller;

import java.util.HashMap;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import manager.co.kr.util.SessionUtil;

@Controller
@RequestMapping("/current")
public class currentController {
	
	private final Logger logger = LoggerFactory.getLogger(currentController.class);

	@RequestMapping("/mdmsServer")
	public String mdmsList(HttpSession session, Model model,
			@RequestParam(value = "mainMenu", defaultValue = "current") String mainMenu,
			@RequestParam(value = "subMenu", defaultValue = "mdms") String subMenu) throws Exception {

		String moveUrl = "redirect:../";

		if (!SessionUtil.isNull(session, "ADMIN")) {

			HashMap sessionMap = SessionUtil.getSessionMap(session, "ADMIN");
			//	System.out.println("sessionMap = " + sessionMap);

			moveUrl = "current/mdmsList";
			model.addAttribute("mainMenu", mainMenu);
			model.addAttribute("subMenu", subMenu);

		}

		return moveUrl;

	}
	
	@RequestMapping("/dcuList")
	public String dcuList(HttpSession session, Model model,
			@RequestParam(value = "mainMenu", defaultValue = "current") String mainMenu,
			@RequestParam(value = "subMenu", defaultValue = "dcu") String subMenu) throws Exception {

		String moveUrl = "redirect:../";

		if (!SessionUtil.isNull(session, "ADMIN")) {

			HashMap sessionMap = SessionUtil.getSessionMap(session, "ADMIN");

			moveUrl = "current/dcuList";
			model.addAttribute("mainMenu", mainMenu);
			model.addAttribute("subMenu", subMenu);

		}

		return moveUrl;
	}
	
	@RequestMapping("/modemList")
	public String modemList(HttpSession session, Model model,
			@RequestParam(value = "mainMenu", defaultValue = "current") String mainMenu,
			@RequestParam(value = "subMenu", defaultValue = "modem") String subMenu) throws Exception {

		String moveUrl = "redirect:../";

		if (!SessionUtil.isNull(session, "ADMIN")) {

			HashMap sessionMap = SessionUtil.getSessionMap(session, "ADMIN");

			moveUrl = "current/modemList";
			model.addAttribute("mainMenu", mainMenu);
			model.addAttribute("subMenu", subMenu);

		}

		return moveUrl; 
	}
	
	@RequestMapping("/meterList")
	public String meterList(HttpSession session, Model model,
			@RequestParam(value = "mainMenu", defaultValue = "current") String mainMenu,
			@RequestParam(value = "subMenu", defaultValue = "meter") String subMenu) throws Exception {

		String moveUrl = "redirect:../";

		if (!SessionUtil.isNull(session, "ADMIN")) {

			HashMap sessionMap = SessionUtil.getSessionMap(session, "ADMIN");

			moveUrl = "current/meterList";
			model.addAttribute("mainMenu", mainMenu);
			model.addAttribute("subMenu", subMenu);

		}

		return moveUrl; 
	}
}
